@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@using mvcGCards.Models
@using Microsoft.AspNetCore.Identity
@model IndexUserViewModel
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Index";
}

<p>
    <a asp-action="Index" asp-controller="Cards">Add New</a>
</p>
<form method="get">
    <div>
        <label>Имя: </label>
        <input name="name" value="@Model.FilterViewModel.SelectedName"/>

        <label>Ranks: </label>
        <select name="rank" asp-items="Model.FilterViewModel.Ranks"></select>

        <input type="submit" value="Фильтр" />
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index"
                   asp-route-sortOrder="@(Model.SortViewModel.NameSort)"
                   asp-route-name="@(Model.FilterViewModel.SelectedName)"
                   asp-route-company="@(Model.FilterViewModel.SelectedRank)"
                   asp-route-userName="@UserManager.GetUserName(User)">Name</a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-sortOrder="@(Model.SortViewModel.RankSort)"
                   asp-route-name="@(Model.FilterViewModel.SelectedName)"
                   asp-route-company="@(Model.FilterViewModel.SelectedRank)"
                   asp-route-userName="@UserManager.GetUserName(User)">Rank</a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-sortOrder="@(Model.SortViewModel.NumberSort)"
                   asp-route-name="@(Model.FilterViewModel.SelectedName)"
                   asp-route-company="@(Model.FilterViewModel.SelectedRank)"
                   asp-route-userName="@UserManager.GetUserName(User)">Number</a>
            </th>

        </tr>
    </thead>
    <!-- tbody>
        @foreach (var item in Model.Cards) {
            <tr>
                <td>@item.Name</td>
                <td>@item.Rank</td>
                <td>@item.Number</td>
                <td>
                    @Html.Raw("<img style='width:70px; height:100px;' src=\"data:image/jpeg;base64,"
                                 + Convert.ToBase64String(item.Image) + "\" />")
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>

        }
    </tbody -->
</table>

<div class="card-container">
    @foreach (var item in Model.Cards)
    {
        <div class="card">
            <img src="data:image/jpeg;base64,@Convert.ToBase64String(item.Image)" />
            <h3>@item.Name</h3>
            <p>
                <a asp-action="Details" asp-route-idCard="@item.Id"
                    asp-route-userName="@UserManager.GetUserName(User)">
                    Details</a> |
                <a asp-action="Remove" asp-route-idCard="@item.Id"
                    asp-route-userName="@UserManager.GetUserName(User)">
                    Remove</a>
            </p>
        </div>
    }
</div>
<style type="text/css">
    .card-container {
        display: flex;
        flex-wrap: wrap;
        gap: 20px; /* Расстояние между карточками */
    }

    .card {
        
        border: 1px solid #ddd;
        border-radius: 2%;
        width: 32%; /* Ширина каждой карточки */

        padding: 1%;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        transition: transform 0.2s;
    }

        .card:hover {
            transform: translateY(-5px);
            background-color: #AAAAAA;
        }

        .card h3 {
            margin: 0 0 10px;
            font-size: 18px;
        }

        .card p {
            margin: 0 0 10px;
            font-size: 14px;
            color: #555;
        }

        .card span {
            font-weight: bold;
            color: #333;
        }


</style>



<p>
    @if (Model.PageViewModel.HasPreviousPage)
    {
        <a asp-action="Index"
           asp-route-page="@(Model.PageViewModel.PageNumber - 1)"
           asp-route-name="@(Model.FilterViewModel.SelectedName)"
           asp-route-company="@(Model.FilterViewModel.SelectedRank)"
           asp-route-sortorder="@(Model.SortViewModel.Current)"
           asp-route-userName="@UserManager.GetUserName(User)"
           class="glyphicon glyphicon-chevron-left">
            Назад
        </a>
    }
    @if (Model.PageViewModel.HasNextPage)
    {
        <a asp-action="Index"
           asp-route-page="@(Model.PageViewModel.PageNumber + 1)"
           asp-route-name="@(Model.FilterViewModel.SelectedName)"
           asp-route-company="@(Model.FilterViewModel.SelectedRank)"
           asp-route-sortorder="@(Model.SortViewModel.Current)"
           asp-route-userName="@UserManager.GetUserName(User)"
           class="glyphicon glyphicon-chevron-right">
            Вперед
        </a>
    }
</p>
